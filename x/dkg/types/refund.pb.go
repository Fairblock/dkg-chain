// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dkg/dkg/refund.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgRefundMsgRequest struct {
	Creator      string                                        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Sender       github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,opt,name=sender,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"sender,omitempty"`
	InnerMessage *types.Any                                    `protobuf:"bytes,3,opt,name=inner_message,json=innerMessage,proto3" json:"inner_message,omitempty"`
}

func (m *MsgRefundMsgRequest) Reset()         { *m = MsgRefundMsgRequest{} }
func (m *MsgRefundMsgRequest) String() string { return proto.CompactTextString(m) }
func (*MsgRefundMsgRequest) ProtoMessage()    {}
func (*MsgRefundMsgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1118712246b8b7e1, []int{0}
}
func (m *MsgRefundMsgRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRefundMsgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRefundMsgRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRefundMsgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRefundMsgRequest.Merge(m, src)
}
func (m *MsgRefundMsgRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgRefundMsgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRefundMsgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRefundMsgRequest proto.InternalMessageInfo

func (m *MsgRefundMsgRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRefundMsgRequest) GetSender() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *MsgRefundMsgRequest) GetInnerMessage() *types.Any {
	if m != nil {
		return m.InnerMessage
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgRefundMsgRequest)(nil), "dkg.dkg.MsgRefundMsgRequest")
}

func init() { proto.RegisterFile("dkg/dkg/refund.proto", fileDescriptor_1118712246b8b7e1) }

var fileDescriptor_1118712246b8b7e1 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x50, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x8d, 0x41, 0x6a, 0x45, 0x28, 0x42, 0x0a, 0x19, 0x42, 0x07, 0x13, 0x31, 0x85, 0xa1, 0xb6,
	0x80, 0x89, 0x31, 0xdd, 0x18, 0xba, 0x64, 0x64, 0x41, 0x49, 0x7c, 0x35, 0x55, 0x88, 0x5d, 0x7c,
	0x8e, 0x44, 0xfe, 0x82, 0x9f, 0xe1, 0x1f, 0x18, 0x3b, 0x32, 0x21, 0x94, 0xfc, 0x05, 0x13, 0x8a,
	0xd3, 0x0e, 0xa7, 0x7b, 0xf7, 0xf4, 0xf4, 0x4e, 0xef, 0xf9, 0xa1, 0xa8, 0x24, 0x1f, 0xc6, 0xc0,
	0xba, 0x51, 0x82, 0x6d, 0x8d, 0xb6, 0x3a, 0x98, 0x8a, 0x4a, 0x32, 0x51, 0xc9, 0xf9, 0xa5, 0xd4,
	0x5a, 0xbe, 0x02, 0x77, 0x74, 0xd1, 0xac, 0x79, 0xae, 0xda, 0x51, 0x33, 0x0f, 0xa5, 0x96, 0xda,
	0x41, 0x3e, 0xa0, 0x91, 0xbd, 0xfe, 0x24, 0xfe, 0xc5, 0x0a, 0x65, 0xe6, 0xdc, 0x1c, 0x78, 0x6b,
	0x00, 0x6d, 0x10, 0xf9, 0xd3, 0xd2, 0x40, 0x6e, 0xb5, 0x89, 0x48, 0x4c, 0x92, 0x93, 0xec, 0x70,
	0x06, 0x8f, 0xfe, 0x04, 0x41, 0x09, 0x30, 0xd1, 0x51, 0x4c, 0x92, 0xd9, 0xf2, 0xf6, 0xef, 0xe7,
	0x6a, 0x21, 0x37, 0xf6, 0xa5, 0x29, 0x58, 0xa9, 0x6b, 0x5e, 0x6a, 0xac, 0x35, 0xee, 0xd7, 0x02,
	0x45, 0xc5, 0x6d, 0xbb, 0x05, 0x64, 0x69, 0x59, 0xa6, 0x42, 0x18, 0x40, 0xcc, 0xf6, 0x06, 0xc1,
	0x83, 0x7f, 0xb6, 0x51, 0x0a, 0xcc, 0x73, 0x0d, 0x88, 0xb9, 0x84, 0xe8, 0x38, 0x26, 0xc9, 0xe9,
	0x5d, 0xc8, 0xc6, 0x14, 0xec, 0x90, 0x82, 0xa5, 0xaa, 0xcd, 0x66, 0x4e, 0xba, 0x1a, 0x95, 0xcb,
	0x9b, 0xaf, 0x8e, 0x92, 0x5d, 0x47, 0xc9, 0x6f, 0x47, 0xc9, 0x47, 0x4f, 0xbd, 0x5d, 0x4f, 0xbd,
	0xef, 0x9e, 0x7a, 0x4f, 0xe7, 0x43, 0x3b, 0xef, 0xae, 0x23, 0xf7, 0xb8, 0x98, 0x38, 0x9b, 0xfb,
	0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x89, 0xf3, 0x1a, 0xd4, 0x3b, 0x01, 0x00, 0x00,
}

func (m *MsgRefundMsgRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRefundMsgRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRefundMsgRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InnerMessage != nil {
		{
			size, err := m.InnerMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRefund(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintRefund(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintRefund(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRefund(dAtA []byte, offset int, v uint64) int {
	offset -= sovRefund(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRefundMsgRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovRefund(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovRefund(uint64(l))
	}
	if m.InnerMessage != nil {
		l = m.InnerMessage.Size()
		n += 1 + l + sovRefund(uint64(l))
	}
	return n
}

func sovRefund(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRefund(x uint64) (n int) {
	return sovRefund(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRefundMsgRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRefund
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRefundMsgRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRefundMsgRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRefund
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRefund
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRefund
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRefund
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRefund
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRefund
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = append(m.Sender[:0], dAtA[iNdEx:postIndex]...)
			if m.Sender == nil {
				m.Sender = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InnerMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRefund
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRefund
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRefund
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InnerMessage == nil {
				m.InnerMessage = &types.Any{}
			}
			if err := m.InnerMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRefund(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRefund
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRefund(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRefund
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRefund
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRefund
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRefund
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRefund
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRefund
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRefund        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRefund          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRefund = fmt.Errorf("proto: unexpected end of group")
)
